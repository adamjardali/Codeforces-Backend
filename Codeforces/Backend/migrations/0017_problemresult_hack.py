# Generated by Django 4.1.9 on 2023-06-09 09:27

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('Backend', '0016_submission'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProblemResult',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('points', models.FloatField()),
                ('penalty', models.IntegerField(blank=True, null=True)),
                ('rejectedAttemptCount', models.IntegerField()),
                ('type', models.CharField(choices=[('PRELIMINARY', 'Preliminary'), ('FINAL', 'Final')], max_length=20)),
                ('bestSubmissionTimeSeconds', models.IntegerField(blank=True, null=True)),
                ('time', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Problem Result',
                'verbose_name_plural': 'Problem Results',
                'db_table': 'problem_result',
            },
        ),
        migrations.CreateModel(
            name='Hack',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('creationTimeSeconds', models.DateTimeField(auto_now_add=True)),
                ('verdict', models.CharField(blank=True, choices=[('SUCCESSFUL', 'Successful Hack'), ('UNSUCCESSFUL', 'Unsuccessful Hack'), ('INVALID_INPUT', 'Invalid Input'), ('GENERATOR_INCOMPILABLE', 'Generator Incompilable'), ('GENERATOR_CRASHED', 'Generator Crashed'), ('IGNORED', 'Ignored'), ('TESTING', 'Testing'), ('OTHER', 'Other')], max_length=100, null=True)),
                ('test', models.CharField(blank=True, max_length=255, null=True)),
                ('judgeProtocol', models.JSONField(blank=True, null=True)),
                ('contestId', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problem_hacks_contest', to='Backend.problem')),
                ('defender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hacks_received', to='Backend.codeforcesuser')),
                ('hacker', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='hacks_made', to='Backend.codeforcesuser')),
                ('index', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='problem_hacks_index', to='Backend.problem')),
            ],
            options={
                'verbose_name': 'Hack',
                'verbose_name_plural': 'Hacks',
                'db_table': 'hack',
            },
        ),
    ]
